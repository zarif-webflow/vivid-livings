import{d as b}from"./chunks/combobox.js";const h=t=>t.filters.value.groups?.[0]?.conditions??[],w=t=>t.map(n=>n.fields);function g(t,n){const u=n?n.endsWith("_")?n:`${n}_`:"",e=t.filter(({interacted:o,value:i})=>o===!0&&i!=null&&String(i).trim()!=="").map(({id:o,value:i})=>{const s=`${u}${o}`;return`${encodeURIComponent(s)}=${encodeURIComponent(String(i))}`});return e.length>0?`?${e.join("&")}`:""}function v(t,n,{signal:u}={}){let e=null;const o=function(...s){e!==null&&clearTimeout(e),!u?.aborted&&(e=setTimeout(()=>{t(...s),e=null},n))},i=function(){o.cancel()};return o.cancel=function(){e!==null&&(clearTimeout(e),e=null)},u?.addEventListener("abort",i,{once:!0}),o}const a={locationSearchInput:`input[fs-list-field=name-with-location]${b.comboboxInput}`,searchButton:"[fs-list-instance=property-location-search] form button[data-search-button=true]"},S="property-location-search",A=()=>{const t=document.querySelector(a.locationSearchInput);if(!t){console.error("Location search input not found",a.locationSearchInput);return}const n=document.querySelector(a.searchButton);if(!n){console.error("Search button not found",a.searchButton);return}let u=t.getAttribute("data-search-params-prefix");u||(console.warn("Search params prefix not found, using default value"),u="");let e=t.comboboxApi,o=[],i=[];t.addEventListener("combobox-init",c=>{e=c.detail.api}),window.FinsweetAttributes||(window.FinsweetAttributes=[]),window.FinsweetAttributes.push(["list",c=>{for(const r of c)r.instance===S&&r.addHook("filter",l=>{const p=w(l),d=[];for(const m of p){const f=m["name-with-location"]?.value;typeof f=="string"&&d.push(f)}return o=d,i=h(r),l})}]);const s=v((c,r)=>{if(!c.trim()){r.renderResults([]),r.closeResultModal();return}r.renderResults(o),r.openResultModal()},200);t.addEventListener("input",()=>{if(!e){console.warn("Combobox API not found",t);return}const c=t.value;s(c,e)}),n.addEventListener("click",()=>{const c=g(i,u),r=`${window.location.origin}/buy${c}`;window.location.href=r})};A();
